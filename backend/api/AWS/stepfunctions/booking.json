{
  "Comment": "BookingWorkflow",
  "StartAt": "BookService",
  "States": {
    "BookService": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "ServiceStatus",
        "Item": {
          "service_id": {
            "S.$": "$.service_id"
          },
          "sstate": {
            "N": "1"
          },
          "paid": {
            "BOOL": false
          }
        }
      },
      "Next": "WaitForSchedule",
      "InputPath": "$",
      "ResultPath": null,
      "OutputPath": "$",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail"
        }
      ]
    },
    "WaitForSchedule": {
      "Type": "Wait",
      "TimestampPath": "$.schedule_time",
      "Next": "GetServiceStatus"
    },
    "GetServiceStatus": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "ServiceStatus",
        "Key": {
          "service_id": {
            "S.$": "$.service_id"
          }
        }
      },
      "ResultPath": "$.status",
      "Next": "IsNoShow",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail"
        }
      ]
    },
    "IsNoShow": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status.Item.sstate.N",
          "StringEquals": "1",
          "Next": "UpdateSStateToFailed"
        }
      ],
      "Default": "WaitForPayment"
    },
    "WaitForPayment": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "GetSS"
    },
    "GetSS": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "ServiceStatus",
        "Key": {
          "service_id": {
            "S.$": "$.service_id"
          }
        }
      },
      "ResultPath": "$.status",
      "Next": "CheckPaymentAndState",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Fail"
        }
      ]
    },
    "CheckPaymentAndState": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:000000000000:function:checkPaymentAndState",
      "Parameters": {
        "service_id.$": "$.service_id",
        "schedule_time.$": "$.schedule_time",
        "sstate.$": "$.status.Item.sstate.N",
        "paid.$": "$.status.Item.paid.BOOL"
      },
      "ResultPath": "$",
      "Next": "ShouldRecheck"
    },
    "ShouldRecheck": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.recheck",
          "NumericEquals": -1,
          "Next": "UpdateSStateToFailed"
        },
        {
          "Variable": "$.recheck",
          "NumericEquals": 0,
          "Next": "UpdateSStateToFinished"
        },
        {
          "Variable": "$.recheck",
          "NumericEquals": 1,
          "Next": "WaitForPayment"
        }
      ]
    },
    "UpdateSStateToFinished": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "ServiceStatus",
        "Key": {
          "service_id": {
            "S.$": "$.service_id"
          }
        },
        "UpdateExpression": "SET sstate = :val",
        "ExpressionAttributeValues": {
          ":val": {
            "N": "5"
          }
        }
      },
      "Next": "Finish"
    },
    "UpdateSStateToFailed": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "ServiceStatus",
        "Key": {
          "service_id": {
            "S.$": "$.service_id"
          }
        },
        "UpdateExpression": "SET sstate = :val",
        "ExpressionAttributeValues": {
          ":val": {
            "N": "-1"
          }
        }
      },
      "Next": "Fail"
    },
    "Finish": {
      "Type": "Succeed"
    },
    "Fail": {
      "Type": "Fail"
    }
  }
}